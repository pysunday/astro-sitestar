{
    "url": "https://astro.build/themes/details/skncre-a-hygraph-cosmetics-brand-e-commerce/",
    "name": "skncre-a-hygraph-cosmetics-brand-e-commerce",
    "title": "SKNCRE, a Hygraph cosmetics brand e-commerce",
    "desc": "A composable commerce demo with Hygraph, Astro, and an external API for product data.",
    "article": "<p>SKNCRE is a fictitious cosmetics brand selling costly snail slime skin care products: face serum, face cream, eye contour, and the SKNCRE bundle. What you often see in composable e-commerce is that the product information lives in a specialized management system (a PIM), the content of the website in a CMS, and commerce features such as a cart, checkout, account, and payments in yet another system (a commerce engine).</p><p>In this example, all pages, content, and media are stored in Hygraph, but the products come from an external system â in this case, a mock API called <a href=\"https://www.federatethis.com/\" rel=\"nofollow ugc\">Federate This</a>. We expose the data in Hygraph via Content Federation. Developers query the CMS for product data, while editors can use the data inside the CMS while they combine editing native and federated content as if it were the same. The beauty is that developers <em>and</em> content editors do not need to understand the external product API as they use it directly through Hygraph.</p><p>This demoâs architecture is highly composable, and it would be relatively easy to add a system like <a href=\"https://commercelayer.io/\" rel=\"nofollow ugc\">Commerce Layer</a> to facilitate shopping cart and checkout functionality.</p><p>Clone the repository, install the dependencies with &lt;code style=\"background-color: rgba(var(--bg-surface-2)/var(--tw-bg-opacity));\"&gt;npm install&lt;/code&gt;, create and fill out the &lt;code style=\"background-color: rgba(var(--bg-surface-2)/var(--tw-bg-opacity));\"&gt;.env&lt;/code&gt; file with your API endpoint (or grab the one from the &lt;code style=\"background-color: rgba(var(--bg-surface-2)/var(--tw-bg-opacity));\"&gt;.env.example&lt;/code&gt; file), and run the app with &lt;code style=\"background-color: rgba(var(--bg-surface-2)/var(--tw-bg-opacity));\"&gt;npm dev&lt;/code&gt;. If you dislike Yarn, use &lt;code style=\"background-color: rgba(var(--bg-surface-2)/var(--tw-bg-opacity));\"&gt;yarn&lt;/code&gt;, &lt;code style=\"background-color: rgba(var(--bg-surface-2)/var(--tw-bg-opacity));\"&gt;pnpm&lt;/code&gt;, or &lt;code style=\"background-color: rgba(var(--bg-surface-2)/var(--tw-bg-opacity));\"&gt;bun&lt;/code&gt; instead.</p><h2>The data side of things</h2><p>As mentioned in the introduction, we are using the <a href=\"https://www.federatethis.com/routes/skncre/\" rel=\"nofollow ugc\">Federate This</a> mock data API for the product information in this demo. We use Content Federation to fetch the API response of Federate This into Hygraph so we can use it as native data in the GraphQL API.</p><p>For the content model, we use a wide array of features in the CMS, from models that represent pages (&lt;code style=\"background-color: rgba(var(--bg-surface-2)/var(--tw-bg-opacity));\"&gt;page&lt;/code&gt;, &lt;code style=\"background-color: rgba(var(--bg-surface-2)/var(--tw-bg-opacity));\"&gt;pdp&lt;/code&gt;) to a &lt;code style=\"background-color: rgba(var(--bg-surface-2)/var(--tw-bg-opacity));\"&gt;productHighlight&lt;/code&gt; model to &lt;code style=\"background-color: rgba(var(--bg-surface-2)/var(--tw-bg-opacity));\"&gt;component&lt;/code&gt; schemas attached to page models for easy page building. Learn more about Hygraphâs <a href=\"https://hygraph.com/components\" rel=\"nofollow ugc\">components</a> in our <a href=\"https://hygraph.com/docs/guides/schema/components\" rel=\"nofollow ugc\">documentation</a>.</p><p>The &lt;code style=\"background-color: rgba(var(--bg-surface-2)/var(--tw-bg-opacity));\"&gt;pdp&lt;/code&gt; page and the &lt;code style=\"background-color: rgba(var(--bg-surface-2)/var(--tw-bg-opacity));\"&gt;productHighlight&lt;/code&gt; models have been connected to external Federate This product data. This way, Hygraph doesnât own the product data but merely serves it, leaving the external system completely autonomous. If the external API data changes, it also changes in Hygraph. Hygraph serves the data from the CDN edge, and you can set a &lt;code style=\"background-color: rgba(var(--bg-surface-2)/var(--tw-bg-opacity));\"&gt;TTL&lt;/code&gt; for the cached data.</p><p>&lt;img src=\"https://media.graphassets.com/2PHxBUQxyDQ491jkSMSw\" alt=\"The schema for a product page with a remote GraphQL API field for selecting a Product from the Federate This endpoint.\"&gt;</p><p>The schema for a product page with a remote GraphQL API field for selecting a Product from the Federate This endpoint.</p><p><br/></p>",
    "typeUrl": "https://github.com/hygraph/skncre-starter-astro",
    "liveUrl": "https://skncre-cosmetics-hygraph.vercel.app/",
    "type": "free",
    "github": {
        "html_url": "https://github.com/hygraph/skncre-starter-astro",
        "name": "skncre-starter-astro",
        "full_name": "hygraph/skncre-starter-astro",
        "description": "SKNCRE a Hygraph cosmetics brand demo showcasing Hygraph CMS and Federated content",
        "stargazers_count": 11,
        "created_at": "2024-03-08T10:19:06Z",
        "updated_at": "2025-06-25T09:23:20Z",
        "pushed_at": "2025-06-25T09:23:15Z",
        "git_url": "git://github.com/hygraph/skncre-starter-astro.git",
        "ssh_url": "git@github.com:hygraph/skncre-starter-astro.git",
        "clone_url": "https://github.com/hygraph/skncre-starter-astro.git",
        "homepage": null
    },
    "imgs": [
        "https://astro.build/_image?href=https%3A%2F%2Fstorage.googleapis.com%2Fdev-portal-bucket%2Fbjpu121nie8k7ewq8rpz1kpzr6g1eah15x2g2b.webp&w=1600&h=900&f=webp",
        "https://astro.build/_image?href=https%3A%2F%2Fstorage.googleapis.com%2Fdev-portal-bucket%2Fkn1ycuq5s9zg2g0fquwnvgmxksj0lgthgt1k9p.webp&w=1600&h=900&f=webp",
        "https://astro.build/_image?href=https%3A%2F%2Fstorage.googleapis.com%2Fdev-portal-bucket%2F1wa5nvxdieya9acpa2cja5irowxs7gd0vi1xq7.webp&w=1600&h=900&f=webp"
    ]
}